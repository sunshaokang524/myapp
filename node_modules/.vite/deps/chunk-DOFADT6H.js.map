{
  "version": 3,
  "sources": ["../../vanta/src/_shaderBase.js"],
  "sourcesContent": ["import VantaBase from './_base.js'\r\nexport {VANTA} from './_base.js'\r\n\r\nconst win = typeof window == 'object'\r\nlet THREE = win && window.THREE\r\n\r\nexport default class ShaderBase extends VantaBase {\r\n  constructor(userOptions) {\r\n    THREE = userOptions.THREE || THREE\r\n    THREE.Color.prototype.toVector = function(){\r\n      return new THREE.Vector3(this.r, this.g, this.b)\r\n    }\r\n    super(userOptions)\r\n    this.updateUniforms = this.updateUniforms.bind(this)\r\n  }\r\n  init(){\r\n    this.mode = 'shader'\r\n    this.uniforms = {\r\n      iTime: {\r\n        type: \"f\",\r\n        value: 1.0\r\n      },\r\n      iResolution: {\r\n        type: \"v2\",\r\n        value: new THREE.Vector2(1, 1)\r\n      },\r\n      iDpr: {\r\n        type: \"f\",\r\n        value: window.devicePixelRatio || 1\r\n      },\r\n      iMouse: {\r\n        type: \"v2\",\r\n        value: new THREE.Vector2(this.mouseX || 0, this.mouseY || 0)\r\n      }\r\n    }\r\n    super.init()\r\n    if (this.fragmentShader) {\r\n      this.initBasicShader()\r\n    }\r\n  }\r\n  setOptions(userOptions){\r\n    super.setOptions(userOptions)\r\n    this.updateUniforms()\r\n  }\r\n  initBasicShader(fragmentShader = this.fragmentShader, vertexShader = this.vertexShader) {\r\n    if (!vertexShader) {\r\n      vertexShader = \"uniform float uTime;\\nuniform vec2 uResolution;\\nvoid main() {\\n  gl_Position = vec4( position, 1.0 );\\n}\"\r\n    }\r\n    this.updateUniforms()\r\n    if (typeof this.valuesChanger === \"function\") {\r\n      this.valuesChanger() // Some effects define this themselves\r\n    }\r\n    const material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader\r\n    })\r\n    const texPath = this.options.texturePath\r\n    if (texPath) {\r\n      this.uniforms.iTex = {\r\n        type: \"t\",\r\n        value: new THREE.TextureLoader().load(texPath)\r\n      }\r\n    }\r\n    const mesh = new THREE.Mesh(new THREE.PlaneGeometry(2, 2), material)\r\n    this.scene.add(mesh)\r\n    this.camera = new THREE.Camera()\r\n    this.camera.position.z = 1\r\n  }\r\n\r\n  updateUniforms() {\r\n    const newUniforms = {}\r\n    let k, v\r\n    for (k in this.options) {\r\n      v = this.options[k]\r\n      if (k.toLowerCase().indexOf('color') !== -1) {\r\n        newUniforms[k] = {\r\n          type: \"v3\",\r\n          value: new THREE.Color(v).toVector()\r\n        }\r\n      } else if (typeof v === 'number') {\r\n        newUniforms[k] = {\r\n          type: \"f\",\r\n          value: v\r\n        }\r\n      }\r\n    }\r\n    return Object.assign(this.uniforms, newUniforms)\r\n  }\r\n  resize(){\r\n    super.resize()\r\n    this.uniforms.iResolution.value.x = this.width / this.scale\r\n    this.uniforms.iResolution.value.y = this.height / this.scale\r\n  }\r\n}"],
  "mappings": ";;;;;AAGA,IAAM,MAAM,OAAO,UAAU;AAC7B,IAAI,QAAQ,OAAO,OAAO;AAE1B,IAAqB,aAArB,cAAwC,aAAU;AAAA,EAChD,YAAY,aAAa;AACvB,YAAQ,YAAY,SAAS;AAC7B,UAAM,MAAM,UAAU,WAAW,WAAU;AACzC,aAAO,IAAI,MAAM,QAAQ,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,IACjD;AACA,UAAM,WAAW;AACjB,SAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI;AAAA,EACrD;AAAA,EACA,OAAM;AACJ,SAAK,OAAO;AACZ,SAAK,WAAW;AAAA,MACd,OAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA,aAAa;AAAA,QACX,MAAM;AAAA,QACN,OAAO,IAAI,MAAM,QAAQ,GAAG,CAAC;AAAA,MAC/B;AAAA,MACA,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,OAAO,OAAO,oBAAoB;AAAA,MACpC;AAAA,MACA,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,OAAO,IAAI,MAAM,QAAQ,KAAK,UAAU,GAAG,KAAK,UAAU,CAAC;AAAA,MAC7D;AAAA,IACF;AACA,UAAM,KAAK;AACX,QAAI,KAAK,gBAAgB;AACvB,WAAK,gBAAgB;AAAA,IACvB;AAAA,EACF;AAAA,EACA,WAAW,aAAY;AACrB,UAAM,WAAW,WAAW;AAC5B,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,gBAAgB,iBAAiB,KAAK,gBAAgB,eAAe,KAAK,cAAc;AACtF,QAAI,CAAC,cAAc;AACjB,qBAAe;AAAA,IACjB;AACA,SAAK,eAAe;AACpB,QAAI,OAAO,KAAK,kBAAkB,YAAY;AAC5C,WAAK,cAAc;AAAA,IACrB;AACA,UAAM,WAAW,IAAI,MAAM,eAAe;AAAA,MACxC,UAAU,KAAK;AAAA,MACf;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,UAAU,KAAK,QAAQ;AAC7B,QAAI,SAAS;AACX,WAAK,SAAS,OAAO;AAAA,QACnB,MAAM;AAAA,QACN,OAAO,IAAI,MAAM,cAAc,EAAE,KAAK,OAAO;AAAA,MAC/C;AAAA,IACF;AACA,UAAM,OAAO,IAAI,MAAM,KAAK,IAAI,MAAM,cAAc,GAAG,CAAC,GAAG,QAAQ;AACnE,SAAK,MAAM,IAAI,IAAI;AACnB,SAAK,SAAS,IAAI,MAAM,OAAO;AAC/B,SAAK,OAAO,SAAS,IAAI;AAAA,EAC3B;AAAA,EAEA,iBAAiB;AACf,UAAM,cAAc,CAAC;AACrB,QAAI,GAAG;AACP,SAAK,KAAK,KAAK,SAAS;AACtB,UAAI,KAAK,QAAQ,CAAC;AAClB,UAAI,EAAE,YAAY,EAAE,QAAQ,OAAO,MAAM,IAAI;AAC3C,oBAAY,CAAC,IAAI;AAAA,UACf,MAAM;AAAA,UACN,OAAO,IAAI,MAAM,MAAM,CAAC,EAAE,SAAS;AAAA,QACrC;AAAA,MACF,WAAW,OAAO,MAAM,UAAU;AAChC,oBAAY,CAAC,IAAI;AAAA,UACf,MAAM;AAAA,UACN,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,WAAO,OAAO,OAAO,KAAK,UAAU,WAAW;AAAA,EACjD;AAAA,EACA,SAAQ;AACN,UAAM,OAAO;AACb,SAAK,SAAS,YAAY,MAAM,IAAI,KAAK,QAAQ,KAAK;AACtD,SAAK,SAAS,YAAY,MAAM,IAAI,KAAK,SAAS,KAAK;AAAA,EACzD;AACF;",
  "names": []
}
