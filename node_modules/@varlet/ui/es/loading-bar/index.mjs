import LoadingBarComponent from "./LoadingBar.mjs";
import { reactive } from "vue";
import { mountInstance } from "../utils/components.mjs";
import { props as loadingBarProps } from "./props.mjs";
let valueTimer;
let errorTimer;
let opacityTimer;
let finishTimer;
let isMount;
let setOptions = {};
const internalProps = {
  value: 0,
  opacity: 0,
  error: false
};
const props = reactive(internalProps);
const mergeConfig = (options) => {
  Object.assign(props, options);
};
const setDefaultOptions = (options) => {
  Object.assign(props, options);
  setOptions = options;
};
const resetDefaultOptions = () => {
  Object.keys(setOptions).forEach((key) => {
    if (props[key] !== void 0) {
      props[key] = void 0;
    }
  });
};
const mount = () => {
  if (!isMount) {
    isMount = true;
    mountInstance(LoadingBarComponent, props);
  }
};
const tickValue = () => {
  valueTimer = window.setTimeout(() => {
    if (props.value >= 95)
      return;
    let num = Math.random();
    if (props.value < 70)
      num = Math.round(5 * Math.random());
    props.value += num;
    tickValue();
  }, 200);
};
const clearTimer = () => {
  window.clearTimeout(errorTimer);
  window.clearTimeout(valueTimer);
  window.clearTimeout(opacityTimer);
  window.clearTimeout(finishTimer);
};
const start = () => {
  clearTimer();
  props.error = false;
  props.value = 0;
  mount();
  opacityTimer = window.setTimeout(() => {
    props.opacity = 1;
  }, 200);
  tickValue();
};
const finish = () => {
  clearTimer();
  props.value = 100;
  opacityTimer = window.setTimeout(() => {
    props.opacity = 0;
    errorTimer = window.setTimeout(() => {
      props.error = false;
    }, 250);
  }, 300);
};
const error = () => {
  clearTimer();
  props.error = true;
  if (props.value === 100) {
    props.value = 0;
  }
  mount();
  opacityTimer = window.setTimeout(() => {
    props.opacity = 1;
  }, 200);
  tickValue();
  finishTimer = window.setTimeout(finish, 300);
};
const LoadingBar = {
  start,
  finish,
  error,
  /** @deprecated Use setDefaultOptions to instead. */
  mergeConfig,
  setDefaultOptions,
  resetDefaultOptions
};
const _LoadingBarComponent = LoadingBar;
var stdin_default = LoadingBar;
export {
  _LoadingBarComponent,
  stdin_default as default,
  loadingBarProps
};
