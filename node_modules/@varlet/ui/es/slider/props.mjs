import { defineListenerProp } from "../utils/components.mjs";
var Thumbs = /* @__PURE__ */ ((Thumbs2) => {
  Thumbs2["First"] = "1";
  Thumbs2["Second"] = "2";
  return Thumbs2;
})(Thumbs || {});
const props = {
  modelValue: {
    type: [Number, Array],
    default: 0
  },
  step: {
    type: [Number, String],
    default: 1
  },
  range: Boolean,
  labelVisible: {
    type: String,
    default: "normal"
  },
  activeColor: String,
  trackColor: String,
  thumbColor: String,
  labelColor: String,
  labelTextColor: String,
  trackHeight: [String, Number],
  max: {
    type: [String, Number],
    default: 100
  },
  min: {
    type: [String, Number],
    default: 0
  },
  thumbSize: [String, Number],
  disabled: Boolean,
  readonly: Boolean,
  direction: {
    type: String,
    default: "horizontal"
  },
  rules: Array,
  onChange: defineListenerProp(),
  onStart: defineListenerProp(),
  onEnd: defineListenerProp(),
  "onUpdate:modelValue": defineListenerProp()
};
export {
  Thumbs,
  props
};
